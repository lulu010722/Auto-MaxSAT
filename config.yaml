model:
  api_key: sk-fee47ec881c446a7a5de72af87943127
  base_url: https://api.deepseek.com
  name: deepseek-chat
  temperature: 0.7


train:
  target_functions:
    # - "int USW::pick_var()"
    # - "void USW::hard_increase_weights()"
    # - "void USW::soft_increase_weights_partial()"
    # - "void USW::soft_increase_weights_not_partial()"
    # - "void USW::hard_smooth_weights()"
    # - "void USW::soft_smooth_weights()"
    # - "void USW::update_clause_weights()"
    - "void USW::increase_clause_weight(int c, double delta)"
    # - "void USW::increase_scores_for_clause(int c, double delta)"
    # - "void USW::decrease_scores_for_satisfied_clause(int c, double delta)"
  related_functions:
    # - "int USW::pick_var()"
    - "void USW::hard_increase_weights()"
    - "void USW::soft_increase_weights_partial()"
    - "void USW::soft_increase_weights_not_partial()"
    - "void USW::hard_smooth_weights()"
    - "void USW::soft_smooth_weights()"
    - "void USW::update_clause_weights()"
    - "void USW::increase_clause_weight(int c, double delta)"
    - "void USW::increase_scores_for_clause(int c, double delta)"
    - "void USW::decrease_scores_for_satisfied_clause(int c, double delta)"
  threshold_rate: 1.05


prompt:
  system: |
    You are an expert in MaxSAT solver optimization with deep knowledge of SAT solving techniques. Your task is to analyze and creatively rewrite specific functions to improve the solver's performance while strictly adhering to these constraints:

    1. Code Transformation Rules:
    - Produce only functional code without explanations, comments or formatting marks
    - The rewritten code must be meaningfully different, not just syntactic variations
    - Maintain the same function signature and interface
    - Only use existing global variables from the original code

    2. Optimization Objectives:
    - Focus on improving clause weighting heuristics effectiveness
    - Consider computational efficiency of weight updates
    - Enhance the solver's ability to escape local optima
    - Maintain or improve solution quality

    3. Innovation Guidelines:
    - Consider novel weighting strategies like multiplicative vs additive updates
    - Explore dynamic adaptation of delta scaling
    - Implement smoothing techniques for weight changes
    - Incorporate reinforcement learning concepts where applicable

  user: |
    Please rewrite the following clause weight adjustment function with innovative improvements.

    Function to rewrite:
    %s

    Current implementation context (ended with ---):
    <original code here>

    %s
    ---


runtime:
  cutoff_time: 6
  epoch: 1
  benchmark_iter_time: 10

